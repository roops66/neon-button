:root {
    --clr-neon: hsl(317 100% 54%);
    --clr-bg: hsl(323 21% 16%);
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    min-height: 100vh;
    display: grid;
    place-items: center;
    background: var(--clr-bg);
    font-family: "Balsamiq Sans", cursive;
    color: var(--clr-neon);
    padding-right: 10rem;
}

.neon-button {
    font-size: 4rem;

    display: inline-block;
    cursor: pointer;
    text-decoration: none;
    color: var(--clr-neon);
    border: var(--clr-neon) 0.125em solid;     /* currentColor (the OG of vars in CSS) - use color of the text */
    padding: 0.25em 1em;        /*em keeps padding relevant to font size (rem) - any increase in font size will increase padding in relevant proportion.*/
    border-radius: 0.25em;

    text-shadow: 
    0 0 0.125em hsl(0 0% 100% / 0.3), 0 0 0.45em currentColor;      /* Adding two shadows to try and get glow effect. */

    box-shadow: inset 0 0 0.5em 0 var(--clr-neon), 0 0 0.5em 0 var(--clr-neon);      /* Inset adds the shadow to the inside of that element */

    position: relative;     /* So pseudo element below stays relevant to the neon button and not the page. .neon-button stays as the containing block. */
}

.neon-button::before {
    pointer-events: none;       /* Stops pointer activating when hovering over the after. */
    content: '';
    position: absolute;
    background: var(--clr-neon);
    top: 120%;
    left: 0;
    /* right: 0;
    bottom: 0; */
    width: 100%;    
    height: 100%;       /* Replaced right, bottom with width, height cos wouldn't have been able to move top position cos bottom = 0. Can also use transform/translate instead. */

    /* perspective (defines how far away we're from the thing) must be declared before anything else you'll do on perspective */
    transform: perspective(1em) rotateX(40deg) scale(1, 0.35);
    filter: blur(1em);
    opacity: 0.7;
}

.neon-button::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    box-shadow: 0 0 2em 0.5em var(--clr-neon);
    opacity: 0;
    background: var(--clr-neon);
    z-index: -1;
    transition: opacity 100ms linear;
}

.neon-button:hover,
.neon-button:focus {
    color: var(--clr-bg);
    text-shadow: none;
}

.neon-button:hover::before,
.neon-button:focus::before {
    opacity: 1;
}

.neon-button:hover::after,
.neon-button:focus::after {
    opacity: 1;
}
